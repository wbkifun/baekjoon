#!/usr/bin/env python

import subprocess as sp
import argparse
from glob import glob

parser = argparse.ArgumentParser(description="Build and Execute a C++11 code")
parser.add_argument('target', type=str, help='target number or file name')
args = parser.parse_args()

ret = glob(args.target+"*.cpp")
if len(ret) == 0:
    raise ValueError("{}*.cpp is not found".format(args.target))
elif len(ret) > 1:
    for s in ret:
        if '.' not in s.split(".cpp")[0]:
            ret = [s]
    #raise ValueError("{} are found".format(ret))

fname = ret[0].split('.cpp')[0]

cmd = "g++ -std=c++11 {0}.cpp -o {0}.exe".format(fname)
print(cmd)
err = False
with sp.Popen(cmd.split(), stdout=sp.PIPE, stderr=sp.PIPE) as proc:
    stdout = proc.stdout.read().decode('utf-8')
    stderr = proc.stderr.read().decode('utf-8')
    if (stdout != ''): print(stdout)
    if (stderr != ''):
        print(stderr)
        err = True

if not err:
    cmd = "./{}.exe".format(fname)
    print(cmd)
    sp.call([cmd])
